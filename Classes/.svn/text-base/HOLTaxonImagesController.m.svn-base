    //
//  HOLTaxonImagesController.m
//  HymOnline
//
//  Created by Joe Cora on 3/24/10.
//  Copyright 2010 Ohio State University. All rights reserved.
//

#import "HOLTaxonImagesController.h"

@implementation HOLTaxonImagesController

@synthesize pictureSource;
@synthesize settings;

// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad {
	self.photoSource = self.pictureSource;
	
    [super viewDidLoad];
	
	// Adjust view upward and expand section
	CGRect bodyFrame = self.tableView.frame;
	
	bodyFrame.origin.y -= 60.0;
	bodyFrame.size.height += 60.0;
	
	self.tableView.frame = bodyFrame;
}

- (void)viewWillAppear:(BOOL)animated {
	// Enable landscape orientation
	[self.settings disablePortraitLock];
	
	// Hide loading image
    [[NSNotificationCenter defaultCenter] postNotificationName:@"HOLHIDELOADING" object:self];
	
	// Set title text when view is about to be shown
	[self.settings.taxonNaviBar setText:@"Images"];
	
	[super viewWillAppear:animated];
}

// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
    // Return YES for supported orientations
    return YES;
}

- (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration {
	if (toInterfaceOrientation == UIInterfaceOrientationPortrait || toInterfaceOrientation == UIInterfaceOrientationPortraitUpsideDown) {
		[self.navigationController setNavigationBarHidden:NO];
	} else {
		[self.navigationController setNavigationBarHidden:YES];
	}
}

- (void)didReceiveMemoryWarning {
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

- (void)viewDidUnload {
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (void)dealloc {
	[self.settings release];
	[self.pictureSource release];
    [super dealloc];
}

#pragma mark -
#pragma mark TTThumbsViewControllerDelegate protocol

- (void)thumbsViewController:(TTThumbsViewController *)controller didSelectPhoto:(id<TTPhoto>)photo {
}

// Public functions
- (id)initWithSettings:(HOLSettings *)loadSettings {
	self = [super init];
	
	self.settings = loadSettings;
	
	// Setup network caching
	[[TTURLRequestQueue mainQueue] setMaxContentLength:0];
	[[TTURLCache sharedCache] setMaxPixelCount:3*1600*1200];
	
	HOLPictureSource *tempPictureSource = [[HOLPictureSource alloc] initWithSettings:self.settings type:@"taxon"];
	self.pictureSource = tempPictureSource;
	[tempPictureSource release];
	
	return self;
}

@end
