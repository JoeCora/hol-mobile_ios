    //
//  HOLMapPointView.m
//  HymOnline
//
//  Created by Joe Cora on 8/17/10.
//  Copyright 2010 __MyCompanyName__. All rights reserved.
//

#import "HOLMapPointView.h"

@implementation HOLMapPointView

@synthesize settings;
@synthesize filter;
@synthesize clickable;
@synthesize didTouch;

- (void)dealloc {
	[self.settings release];
	[self.filter release];
    [super dealloc];
}

// Touch events
- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {
	if (self.clickable) {
		// Create icon filter if necessary
		if (self.filter == nil) {
			self.filter = [CALayer layer];
			self.filter.frame = self.bounds;
			self.filter.backgroundColor = [UIColor blackColor].CGColor;
			self.filter.opacity = 0.5;
			self.filter.cornerRadius = 8.0;
		}
		
		// Add icon filter
		[self.layer insertSublayer:self.filter atIndex:0];
		
		self.didTouch = YES;
	}
}

- (void)touchesCancelled:(NSSet *)touches withEvent:(UIEvent *)event {
	// Remove icon filter
	[self.filter removeFromSuperlayer];
	
	self.didTouch = NO;
}

- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event {
	if (self.didTouch) {
		// Show loading image
		[[NSNotificationCenter defaultCenter] postNotificationName:@"HOLSHOWLOADING" object:self];
		
		// Set located ID based on selected point and send message to load full locality info page
		HOLMapPoint *mapAnno = (HOLMapPoint *)self.annotation;
		
		[self.settings updateLocID:mapAnno.locID];
		
		// Show selected locality information
		[self performSelector:@selector(showLocInfo) withObject:nil afterDelay:0.0];
		
		// Remove icon filter
		[self.filter removeFromSuperlayer];
		
		self.didTouch = NO;
	}
}

// Public functions
- (id)initWithSettings:(HOLSettings *)loadSettings annotation:(id <MKAnnotation>)annotation ptType:(HOLMAPPOINTTYPE)ptType reuseIdentifier:(NSString *)reuseIdentifier {
	self = [super initWithAnnotation:annotation reuseIdentifier:reuseIdentifier];
	
	self.settings = loadSettings;
	
	// Initialize variables
	self.enabled = YES;
	self.draggable = NO;
	self.clickable = YES;
	self.didTouch = NO;
	
	switch (ptType) {
		case HOLMAPPOINT: {
			UIImage *ptImage = [UIImage imageNamed:@"pt_icon_17x17.png"];
			
			self.image = ptImage;
			
			break;
		}
		case HOLMAPPOLYGON: {
			UIImage *ptImage = [UIImage imageNamed:@"poly_icon_17x17.png"];
			
			self.image = ptImage;
			
			break;
		}
		case HOLMAPLOCATION: {
			UIImage *ptImage = [UIImage imageNamed:@"location-icon.png"];
			
			self.image = ptImage;
			
			break;
		}
	}
	
	return self;
}

- (void)showLocInfo {
	[[NSNotificationCenter defaultCenter] postNotificationName:@"HOLSHOWLOCINFO" object:self];
}

@end
